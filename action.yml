name: 'ottr-reports-commenting'
description: 'Works with ottr-reports to display results of the reports on a pull request'
inputs:
  gh_pat:
    description: "A GitHub secret personal access token that is set in the current repo."
    default: ${{ secrets.GH_PAT }}
    required: true
    type: string
  check_type:
    description: "There are three types of reports that can be done and specified: 'spelling', 'urls', or 'quiz_format'."
    required: true
    type: string
    required: true
  error_min:
    description: "What number of errors should make this check fail?"
    default: 0
    type: number
    required: false
  git_path:
    description: "What GitHub repository should this be run on?"
    required: true
    type: string
  branch_name:
    description: "What should the preview branch be called?"
    default: "preview-${{ github.event.pull_request.number }}"
    required: false
    type: string

outputs:
  comments:
    description: "Comments that have the check report information and links"
  error_name:
    description: "The name of the error that was run"
    value: ${{ steps.random-number-generator.outputs.random-id }}
  report_path:
    description: "The relative path to where the report was saved."
  error_num:
    description: "How many errors were found."

runs:
  using: "composite"
  steps:
    - name: Checkout files
      uses: actions/checkout@v2
      with:
        repository: ${{inputs.github_path}}
        fetch-depth: 0

    - name: Configure git
      run: |
        git config --local user.email "itcrtrainingnetwork@gmail.com"
        git config --local user.name "jhudsl-robot"

        git fetch --all
        git checkout ${{ inputs.branch_name }} -b
      shell: bash

    - name: Run the check
      uses: jhudsl/ottr-reports@main
      id: check_results
      with:
        check_type: ${{ inputs.check_type }}
        error_min: ${{ inputs.error_min }}

############################# Handle commenting ################################

    - name: Commit check errors
      run: |
        git add --force ${{ steps.chk_results.outputs.report_path }} || echo "No changes to commit"
        git commit -m 'Add  ${{ steps.chk_results.outputs.error_name }} check file' || echo "No changes to commit"
        git pull --set-upstream origin ${{ inputs.branch_name }} --allow-unrelated-histories --strategy-option=ours
        git push --force origin ${{ inputs.branch_name }} || echo "No changes to commit"

      - name: Build components of the spell check comment
        id: build-components
        env:
          GH_PAT: ${{ inputs.gh_pat }}
        run: |
          error_url=https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/${{ inputs.branch_name }}/${{ steps.chk_results.outputs.report_path }}
          echo ::set-output name=time::$(date +'%Y-%m-%d')
          echo ::set-output name=commit_id::$GITHUB_SHA
          echo ::set-output name=error_url::$error_url

      # Handle the commenting
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: ${{ steps.chk_results.outputs.error_name }}

      - name: There are errors!
        if: ${{ steps.chk_results.outputs.error_num >= inputs.error_min }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            :warning: ${{ steps.chk_results.outputs.error_name }} :warning:
            There are ${{ steps.chk_results.outputs.error_name }} that need to be addressed. [Read this guide for more info](https://github.com/jhudsl/OTTR_Template/wiki/Most-common-errors-and-pitfalls#spell-checkurl-checkquiz-format-fail).
            [Download the errors here.](${{ steps.build-components.outputs.error_url }})
            _Comment updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace

      - name: Check check results - fail if too many errors
        if: ${{ steps.chk_results.outputs.error_num >= inputs.error_min }}
        run: exit 1

      - name: No errors
        if: ${{ steps.chk_results.outputs.error_num < inputs.error_min }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            No ${{ steps.chk_results.outputs.error_name }}! :tada:
            _Comment updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace
